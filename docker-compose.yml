version: '3.8'

services:
  mariadb:
    image: mariadb:10.5
    container_name: live-auction-db
    restart: always
    ports:
      - "3306:3306"
    environment:
      TZ: Asia/Seoul
      MARIADB_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MARIADB_DATABASE: ${DB_DATABASE}
      MARIADB_USER: ${DB_USER}
      MARIADB_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./db-data:/var/lib/mysql

  redis:
    image: redis:6.2-alpine
    container_name: live-auction-redis
    restart: always
    ports:
      - "6379:6379"
    environment:
      TZ: Asia/Seoul
    volumes:
      - ./redis-data:/data

  backend:
    build: ./backend
    container_name: live-auction-backend
    restart: always
    depends_on:
      - mariadb
      - redis
    ports:
      - "8080:8080"
    environment:
      TZ: Asia/Seoul
      # Spring Boot 애플리케이션이 컨테이너 이름으로 DB와 Redis에 접근하도록 URL 변경
      # .env 파일에 DB_DATABASE, DB_USER 등도 함께 정의되어 있어야 합니다.
      DB_DATABASE: ${DB_DATABASE}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      # 'localhost' 대신 docker-compose에 정의된 서비스 이름(mariadb, redis)을 사용
      SPRING_DATASOURCE_URL: jdbc:mariadb://mariadb:3306/${DB_DATABASE}
      SPRING_DATA_REDIS_HOST: redis
      # 기타 인증/보안 관련 환경 변수들
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      TOSS_SECRET_KEY: ${TOSS_SECRET_KEY}
    volumes:
      - /home/ubuntu/data/uploads:/app/uploads # 호스트 서버의 절대 경로로 변경

  frontend:
    build: ./frontend
    container_name: live-auction-frontend
    restart: always
    depends_on:
      - backend
    ports:
      - "3000:80"  # 내 컴퓨터의 3000번 포트로 접속하면, 컨테이너의 80번(Nginx) 포트로 연결
    environment:
      TZ: Asia/Seoul