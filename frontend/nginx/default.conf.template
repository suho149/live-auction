# 1. HTTP 서버 블록: 모든 요청을 HTTPS로 리디렉션
server {
    listen 80;
    listen [::]:80;

    # 도메인 이름은 환경 변수로부터 받습니다.
    server_name ${DOMAIN_NAME};

    # Let's Encrypt 인증서 발급을 위한 경로 허용
    # Certbot이 도메인 소유권을 확인하기 위해 이 경로로 파일을 생성합니다.
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # 그 외 모든 HTTP 요청은 HTTPS로 영구 리디렉션 (301)
    location / {
        return 301 https://$host$request_uri;
    }
}

# 2. HTTPS 서버 블록: 실제 서비스 제공
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name ${DOMAIN_NAME};

    # SSL 인증서 경로 설정 (환경 변수로부터 받음)
    ssl_certificate /etc/letsencrypt/live/${DOMAIN_NAME}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${DOMAIN_NAME}/privkey.pem;

    # SSL 보안 강화 설정 (권장)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;

    location /swagger-ui.html {
           proxy_pass http://live-auction-backend:8080;
           proxy_set_header Host $host;
       }

       location /swagger-ui {
           proxy_pass http://live-auction-backend:8080;
           proxy_set_header Host $host;
       }

       location /v3/api-docs { # /api-docs 대신 /v3/api-docs 사용 권장
           proxy_pass http://live-auction-backend:8080;
           proxy_set_header Host $host;
       }

    # 기본 설정: React 앱의 정적 파일을 제공
    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
        # URL에 해당하는 파일이 없으면, index.html을 반환 (React Router가 경로 처리)
        try_files $uri $uri/ /index.html;
    }

    # /oauth2/로 시작하는 모든 요청을 백엔드로 전달
    location /oauth2 {
        proxy_pass http://live-auction-backend:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Google 로그인 성공 후 돌아오는 콜백 주소를 백엔드로 전달
    location /login/oauth2 {
        proxy_pass http://live-auction-backend:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # /api/v1/으로 시작하는 모든 요청을 백엔드 컨테이너로 전달 (Proxy)
    location /api/v1 {
        # 'live-auction-backend'는 아래 docker-compose.yml에 정의할 백엔드 서비스 이름
        proxy_pass http://live-auction-backend:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # SSE를 위한 헤더 추가
        proxy_set_header Connection '';
        proxy_http_version 1.1;
        proxy_buffering off; # 응답 버퍼링 끄기
        proxy_cache off; # 캐시 끄기
    }

    # /ws-stomp/로 시작하는 WebSocket 요청도 백엔드로 전달
    location /ws-stomp {
        proxy_pass http://live-auction-backend:8080;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
    }

    # /images/로 시작하는 이미지 요청도 백엔드로 전달
    location /images {
        proxy_pass http://live-auction-backend:8080;
        proxy_set_header Host $host;
    }
}