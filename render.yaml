# Render Blueprint (Infrastructure as Code)
# 이 파일 하나로 모든 서비스를 정의하고 배포합니다.

services:
  # 1. MariaDB 데이터베이스 서비스
  - type: pserv # Private Service (내부 네트워크에서만 접근 가능)
    name: mariadb
    # Docker Hub의 공식 MariaDB 이미지를 사용합니다.
    dockerImage: mariadb:10.5
    # Render의 무료 플랜을 사용합니다.
    plan: free
    # 데이터베이스 데이터를 영속적으로 저장할 디스크 설정
    disks:
      - name: db-data
        mountPath: /var/lib/mysql
        sizeGB: 1 # 무료 등급은 1GB
    # 환경 변수 그룹을 참조합니다 (4단계에서 설정).
    envVarGroups:
      - name: db-credentials

  # 2. Redis 캐시/스토어 서비스
  - type: pserv
    name: redis
    dockerImage: redis:6.2-alpine
    plan: free
    disks:
      - name: redis-data
        mountPath: /data
        sizeGB: 1

  # 3. 백엔드 Spring Boot 서비스
  - type: web      # Web Service (외부 인터넷에 노출)
    name: live-auction-backend
    # 프로젝트의 'backend' 폴더에 있는 Dockerfile을 사용하여 빌드합니다.
    dockerfilePath: ./backend/Dockerfile
    # Render가 자동으로 CI/CD를 설정하도록 합니다.
    autoDeploy: true
    # 무료 플랜을 사용합니다.
    plan: free
    # 백엔드가 DB와 Redis에 접근하기 위한 환경 변수
    envVars:
      # Render의 내부 네트워크를 통해 서비스 이름(mariadb, redis)으로 접속
      - key: SPRING_DATASOURCE_URL
        value: jdbc:mariadb://mariadb:3306/${DB_DATABASE}
      - key: SPRING_DATA_REDIS_HOST
        value: redis
      # 환경 변수 그룹 참조
      - group: db-credentials
      - group: app-secrets

  # 4. 프론트엔드 Nginx 서비스
  - type: web
    name: live-auction-frontend
    dockerfilePath: ./frontend/Dockerfile
    autoDeploy: true
    plan: free
    # Nginx가 백엔드로 요청을 프록시할 때 사용할 내부 주소
    # Render는 자동으로 '서비스이름.onrender.com' 형태의 주소를 생성해줍니다.
    # From 'value'는 Render가 백엔드 서비스의 내부 URL을 자동으로 주입해주는 기능입니다.
    envVars:
      - key: NGINX_PROXY_PASS
        fromService:
          type: web
          name: live-auction-backend
          property: url # 백엔드 서비스의 URL을 가져옴

# ★ Render 대시보드에서 설정할 환경 변수 그룹 정의
envVarGroups:
  - name: db-credentials
    envVars:
      # 이 값들은 4단계에서 Render 대시보드에 직접 입력합니다.
      - key: MARIADB_ROOT_PASSWORD
      - key: DB_DATABASE
      - key: DB_USER
      - key: MARIADB_PASSWORD
  - name: app-secrets
    envVars:
      # 이 값들도 4단계에서 Render 대시보드에 직접 입력합니다.
      - key: GOOGLE_CLIENT_ID
      - key: GOOGLE_CLIENT_SECRET
      - key: JWT_SECRET_KEY
      - key: TOSS_SECRET_KEY